{"name":"Master cpp teaching","tagline":"C++ lectures of Master 1 of Fundamental Physics of the University of Paris-Sud","body":"#+TITLE:  C++ teaching courses of Master 1 - README\r\n#+AUTHOR: Xavier Garrido\r\n\r\n* Introduction\r\n\r\nThis repository contains materials for C++ lectures given in Master 1 of\r\nFundamental Physics at the University of Paris Sud. It provides slides, courses\r\nas well as exercices and piece of code to illustrate the most fundamental ideas\r\nbehind C++ and the Object Oriented Programming.\r\n\r\n* Installation\r\n\r\nTo use these materials you will need to install some dedicated LaTeX templates\r\nindependantly developed https://github.com/xgarrido/latex-templates. See the\r\nREADME inside this github repository to know how to install them.\r\n\r\nYou will also need to install the proper Pygments style to match University of\r\nParis Sud colors. The repository address is\r\nhttps://github.com/xgarrido/pygments-styles with the installation commands.\r\n\r\nGiven the succesful installation of the LaTeX templates + Pygments style, you\r\nwill need special =orgmode= settings to translate the =org= files into =pdf=\r\ndocuments. All the needed code is embedded within this file in the next\r\nsection. There is no need to detangle this file since emacs will do it when you\r\nwill use the Makefile in the corresponding directories. So, next step will be to\r\ndo =make= within the courses directories.\r\n\r\n* Orgmode settings\r\n:PROPERTIES:\r\n:TANGLE: README.el\r\n:END:\r\n** Settings for =org= to =pdf= conversion\r\n*** Requirements\r\n#+BEGIN_SRC emacs-lisp\r\n  (require 'ox-latex)\r\n  (require 'ox-beamer)\r\n#+END_SRC\r\n*** Use smart quote when exporting\r\n#+BEGIN_SRC emacs-lisp\r\n  (setq org-export-with-smart-quotes t)\r\n#+END_SRC\r\n\r\n*** Place table caption below table\r\n#+BEGIN_SRC emacs-lisp\r\n  (setq org-latex-table-caption-above nil)\r\n#+END_SRC\r\n*** No author\r\n#+BEGIN_SRC emacs-lisp\r\n(setq org-export-with-author nil)\r\n#+END_SRC\r\n*** Code blocks\r\nThis activates a number of widely used languages, you are encouraged to activate\r\nmore languages using the customize interface for the =org-babel-load-languages=\r\nvariable, or with an elisp form like the one below.  The customize interface of\r\n=org-babel-load-languages= contains an up to date list of the currently\r\nsupported languages.\r\n#+BEGIN_SRC emacs-lisp\r\n  (org-babel-do-load-languages\r\n   'org-babel-load-languages\r\n   '((emacs-lisp . t)\r\n     (latex . t)))\r\n#+END_SRC\r\n\r\nYou are encouraged to add the following to your personal configuration\r\nalthough it is not added by default as a security precaution.\r\n#+BEGIN_SRC emacs-lisp\r\n  (setq org-confirm-babel-evaluate nil)\r\n#+END_SRC\r\n\r\n*** Default list of LaTeX packages\r\nOnly include one default package and remove all the crapppy stuff included by\r\n=org= \\rightarrow =latex= translation.\r\n\r\n#+BEGIN_SRC emacs-lisp\r\n  (add-to-list 'org-latex-packages-alist '(\"\" \"org-preamble\"))\r\n#+END_SRC\r\n\r\n*** Defining =org-latex-classes=\r\n\r\n#+BEGIN_SRC emacs-lisp\r\n  (unless (boundp 'org-latex-classes)\r\n    (setq org-latex-classes nil))\r\n#+END_SRC\r\n\r\n**** Beamer template\r\n#+BEGIN_SRC emacs-lisp\r\n  (add-to-list 'org-latex-classes\r\n               '(\"beamer\"\r\n                 \"\\\\documentclass[c]{beamer}\r\n                  [PACKAGES]\r\n                  \\\\usepackage{custom-beamer}\r\n                  [NO-DEFAULT-PACKAGES]\"\r\n                 (\"\\\\section{%s}\" . \"\\\\section*{%s}\")\r\n                 (\"\\\\subsection{%s}\" . \"\\\\subsection*{%s}\")\r\n                 (\"\\\\subsubsection{%s}\" . \"\\\\subsubsection*{%s}\")\r\n                 (\"\\\\paragraph{%s}\" . \"\\\\paragraph*{%s}\")\r\n                 (\"\\\\subparagraph{%s}\" . \"\\\\subparagraph*{%s}\")))\r\n#+END_SRC\r\n\r\nWe also translate *bold* into beamer =structure= and underline into *bold*.\r\n#+BEGIN_SRC emacs-lisp\r\n  (defun cpp-beamer-bold (contents backend info)\r\n    (when (eq backend 'beamer)\r\n      (replace-regexp-in-string \"\\\\`\\\\\\\\[A-Za-z0-9]+\" \"\\\\\\\\structure\" contents)))\r\n  (defun cpp-beamer-underline (contents backend info)\r\n    (when (eq backend 'beamer)\r\n      (replace-regexp-in-string \"\\\\`\\\\\\\\[A-Za-z0-9]+\" \"\\\\\\\\textbf\" contents)))\r\n\r\n  (add-to-list 'org-export-filter-bold-functions 'cpp-beamer-bold)\r\n  (add-to-list 'org-export-filter-underline-functions 'cpp-beamer-underline)\r\n#+END_SRC\r\n\r\nWe add the option =frame= to footnote to make sure the footnote appears at the\r\nbottom of the frame.\r\n#+BEGIN_SRC emacs-lisp\r\n  (defun sk-beamer-footnote (contents backend info)\r\n    (when (eq backend 'beamer)\r\n      (replace-regexp-in-string \"\\\\`\\\\\\\\[A-Za-z0-9]+\" \"\\\\\\\\footnote[frame]\" contents)))\r\n  (add-to-list 'org-export-filter-footnote-reference-functions 'sk-beamer-footnote)\r\n#+END_SRC\r\n\r\nWe define a new environment for \"colored\" box\r\n#+BEGIN_SRC emacs-lisp\r\n  (add-to-list 'org-beamer-environments-extra\r\n               '(\"cbox\" \"c\" \"\\\\begin{cbox}%o(%h)\" \"\\\\end{cbox}\"))\r\n#+END_SRC\r\n\r\n**** Lecture template\r\n#+BEGIN_SRC emacs-lisp :results none\r\n  (add-to-list 'org-latex-classes\r\n               '(\"lecture\"\r\n                 \"\\\\documentclass{report}\r\n                  [PACKAGES]\r\n                  \\\\usepackage{lecture-style}\r\n                  [NO-DEFAULT-PACKAGES]\"\r\n                 (\"\\\\section{%s}\" . \"\\\\section*{%s}\")\r\n                 (\"\\\\subsection{%s}\" . \"\\\\subsection*{%s}\")\r\n                 (\"\\\\subsubsection{%s}\" . \"\\\\subsubsection*{%s}\")\r\n                 (\"\\\\paragraph{%s}\" . \"\\\\paragraph*{%s}\")\r\n                 (\"\\\\subparagraph{%s}\" . \"\\\\subparagraph*{%s}\")))\r\n#+END_SRC\r\n\r\n*** =minted= setup\r\nCode fragments are syntax highlighted using [[https://code.google.com/p/minted/][minted]] LaTeX package\r\n\r\n#+BEGIN_SRC emacs-lisp\r\n  (setq org-latex-listings 'minted)\r\n  (setq org-latex-minted-options\r\n        '(;;(\"frame\" \"lines\")\r\n          (\"fontsize\" \"\\\\footnotesize\")\r\n          (\"samepage\" \"\")\r\n          (\"mathescape\" \"\")\r\n          (\"xrightmargin\" \"0.5cm\")\r\n          (\"xleftmargin\"  \"0.5cm\")\r\n          ))\r\n#+END_SRC\r\n\r\n*** Set LaTeX command\r\n#+BEGIN_SRC emacs-lisp\r\n   (defun sk-latexmk-cmd (backend)\r\n     \"When exporting from .org with latex, automatically run latex,\r\n        pdflatex, or xelatex as appropriate, using latexmk.\"\r\n     (when (org-export-derived-backend-p backend 'latex)\r\n       (let ((texcmd)))\r\n       (setq texcmd \"jobname=$(basename %f | sed 's/\\.tex//');latexmk -xelatex -shell-escape -quiet %f && mkdir -p latex.d && mv ${jobname}.* latex.d/. && mv latex.d/${jobname}.{org,tex,pdf,fdb_latexmk} .\")\r\n       (setq org-latex-pdf-process (list texcmd))))\r\n  (org-add-hook 'org-export-before-processing-hook 'sk-latexmk-cmd)\r\n#+END_SRC\r\n** Settings for =org= to =html= conversion\r\n*** Requirements\r\n#+BEGIN_SRC emacs-lisp\r\n  (require 'ox-html)\r\n#+END_SRC\r\n*** Building html preamble\r\n#+TBLNAME: lecture_list :results none\r\n|---+----------------------------+------------------------------------------------------|\r\n| + | lecture_pointeur           | Pointeurs, références & allocation dynamique         |\r\n| + | lecture_fonction           | Rappels sur les fonctions                            |\r\n| + | lecture_specificite_c++    | Les spécificités du C++                              |\r\n| + | lecture_struct_class       | Structures et classes                                |\r\n| - | lecture_encapsulation      | Encapsulation des données                            |\r\n| - | lecture_constructeur       | Notions de constructeur et de destructeur            |\r\n| - | lecture_amitie             | Fonctions et classes amies                           |\r\n| - | lecture_surcharge          | Surcharge d'opérateur                                |\r\n| - | lecture_heritage           | Héritage                                             |\r\n| - | lecture_template           | Notions de patrons de fonctions et de classes        |\r\n| - | lecture_librairie_standard | Introduction à la librairie standard STL             |\r\n| + | annexe_compilation         | Compilation et directives de préprocesseur           |\r\n| + | annexe_convention_ecriture | Convention d'écriture et organisation des programmes |\r\n| + | annexe_cout_cin            | Écriture/lecture sur l'entrée/sortie standard        |\r\n| - | annexe_variable_statique   | Les membres données statiques                        |\r\n| - | annexe_enum_typedef        | Utilisation de enum et de typedef                    |\r\n|---+----------------------------+------------------------------------------------------|\r\n\r\n#+TBLNAME: td_list :results none\r\n|---+------------------------+------------------------------------|\r\n| + | td_pointeur_fonction   | Compilation, pointeur & références |\r\n| + | td_specificite_c++     | Spécificités du C++                |\r\n| + | td_classes             | Classes en C++                     |\r\n| - | td_class_complexe      | Fraction de nombres complexes      |\r\n| - | td_nombre_aleatoire    | Constructeur & destructeurs        |\r\n| - | td_surcharge_operateur | Surcharge d'opérateur              |\r\n| - | td_polymorphisme       | Polymorphisme & classe abstraite   |\r\n| + | td_blackjack           | Jeu du blackjack                   |\r\n|---+------------------------+------------------------------------|\r\n\r\n#+TBLNAME: slide_list :results none\r\n|---+------------------------+---------------------------------------------------------|\r\n| + | slide_compilation      | Compilation & Directives de préprocesseur               |\r\n| + | slide_pointeur         | Pointeurs, Références & Allocation Dynamique de Mémoire |\r\n| + | slide_specificite_c++  | Spécificités du C++ (indépendantes de la POO)           |\r\n| + | slide_struct_class     | Structures & Classes                                    |\r\n| - | slide_encapsulation    | Encapsulation des données                               |\r\n| - | slide_constructeur     | Constructeur & Destructeur de classe                    |\r\n| - | slide_amitie_surcharge | Amitié & Surcharge d'opérateur                          |\r\n| - | slide_heritage_1       | Héritage (Partie 1)                                     |\r\n| - | slide_heritage_2       | Héritage (Partie 2)                                     |\r\n| - | slide_template         | Patrons de fonctions et de classes                      |\r\n| - | slide_STL              | Introduction à la librairie standard                    |\r\n|---+------------------------+---------------------------------------------------------|\r\n\r\n#+NAME: html-preamble\r\n#+HEADERS: :var list=\"\"\r\n#+BEGIN_SRC sh :tangle no :results output\r\n  hr=true\r\n  tag=true\r\n  for f in $list\r\n  do\r\n      if [ $f == '+' ]; then\r\n          if $tag; then preamble+='</a>'; else preamble+='</aa>';fi\r\n          preamble+='<a href=\\\"'\r\n          tag=true\r\n      elif [ $f == '-' ]; then\r\n          if $tag; then preamble+='</a>'; else preamble+='</aa>';fi\r\n          preamble+='<aa>'\r\n          tag=false\r\n      elif [[ $f == *lecture_* || $f == *slide_* || $f == *td_* ]]; then\r\n          if $tag; then preamble+=$f'.html\\\">';fi\r\n      elif [[ $f == *annexe_* ]]; then\r\n          if $hr; then preamble+='\\\"></a><hr/><a href=\\\"';fi\r\n          if $tag; then preamble+=$f'.html\\\">';fi\r\n          hr=false\r\n      else\r\n          preamble+=$f' '\r\n      fi\r\n  done\r\n  if $tag; then preamble+='</a>';else preamble+='</aa>';fi\r\n  echo -ne $preamble\r\n#+END_SRC\r\n*** Building index page\r\n:PROPERTIES:\r\n:TANGLE: index.html\r\n:END:\r\n#+BEGIN_SRC html\r\n  <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n  <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\r\n            \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n  <html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\r\n    <head>\r\n      <title>Cours de C++ du Master 1 Physique Fondamentale, Université Paris Sud</title>\r\n      <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\r\n      <link rel=\"stylesheet\" href=\"./doc/stylesheets/styles.css\">\r\n      <link rel=\"stylesheet\" href=\"./doc/stylesheets/org-pygments.css\">\r\n      <style media=\"screen\" type=\"text/css\">\r\n        #preamble {\r\n        text-transform:none;\r\n        text-align:left;\r\n        font-size:20px;\r\n        width:200px;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div id=\"preamble\" class=\"status\">\r\n        <a href=\"./doc/lectures/lecture_pointeur.html\">Fiches C++<small>Cours écrits</small></a>\r\n        <a href=\"./doc/slides/slide_compilation.html\">Transparents C++<small>Présentations orales</small></a>\r\n        <a href=\"./doc/td/td_pointeur_fonction.html\">Travaux Dirigés<small>Exercices de C++</small></a>\r\n      </div>\r\n      <div id=\"content\">\r\n        <h1 class=\"title\">Cours de C++ du Master 1 Physique Fondamentale, Université Paris Sud</h1><hr/>\r\n        <p>\r\n          Ce site regroupe les documents écrits relatifs au cours de C++ du Master\r\n          1 de Physique Fondamentale de l'Université Paris-Sud. Ce cours contient :\r\n          <li><a href=\"./doc/lectures/lecture_pointeur.html\">un cours écrit sous forme de fiche</a></li>\r\n          <li><a href=\"./doc/slides/slide_compilation.html\">les transparents de cours</a></li>\r\n          <li><a href=\"./doc/td/td_pointeur_fonction.html\">un ensemble d'exercices</a></li>\r\n        </p>\r\n\r\n        <p>\r\n          Les différents supports sont accessibles <i>via</i> les liens\r\n          hypertextes situés à la gauche de cette page.\r\n        </p>\r\n        <p>\r\n          Historiquement, ces fiches de cours ont été initialement rédigées par\r\n          Mathieu Loumaigne, moniteur à l'Université Paris-Sud puis, reprises et\r\n          enrichies par,\r\n          successivement, <a href=\"mailto:xavier.garrido@upsud.fr\">Xavier\r\n          Garrido</a> et Yann Leprince.\r\n        </p>\r\n      </div>\r\n    </body>\r\n  </html>\r\n#+END_SRC\r\n*** Define =org-project=\r\n#+BEGIN_SRC emacs-lisp :noweb yes\r\n  (unless (boundp 'org-publish-project-alist)\r\n    (setq org-publish-project-alist nil))\r\n\r\n  (setq org-html-style-default \"\")\r\n  (setq org-html-htmlize-output-type 'css)\r\n\r\n  (let* ((this-dir (file-name-directory (or load-file-name buffer-file-name))))\r\n    (add-to-list\r\n     'org-publish-project-alist\r\n     `(\"cpp-lectures\"\r\n       :base-directory ,(expand-file-name \"lectures\" this-dir)\r\n       :recursive t\r\n       :exclude \"README.org\"\r\n       :html-extension \"html\"\r\n       :base-extension \"org\"\r\n       :publishing-directory ,(expand-file-name \"doc/lectures\" this-dir)\r\n       :publishing-function org-html-publish-to-html\r\n       :section-numbers nil\r\n       :html-head \"<link rel=\\\"stylesheet\\\" href=\\\"../stylesheets/styles.css\\\">\r\n                   <link rel=\\\"stylesheet\\\" href=\\\"../stylesheets/org-pygments.css\\\">\"\r\n       :html-preamble \"<<html-preamble(lecture_list)>>\r\n                      <hr/>\r\n                      <a href=\\\"../index.html\\\">Retour menu principal</a>\"\r\n       :html-postamble nil))\r\n    (add-to-list\r\n     'org-publish-project-alist\r\n     `(\"cpp-td\"\r\n       :base-directory ,(expand-file-name \"td\" this-dir)\r\n       :recursive t\r\n       :exclude \"README.org\"\r\n       :html-extension \"html\"\r\n       :base-extension \"org\"\r\n       :publishing-directory ,(expand-file-name \"doc/td\" this-dir)\r\n       :publishing-function org-html-publish-to-html\r\n       :section-numbers nil\r\n       :html-head \"<link rel=\\\"stylesheet\\\" href=\\\"../stylesheets/styles.css\\\">\r\n                   <link rel=\\\"stylesheet\\\" href=\\\"../stylesheets/org-pygments.css\\\">\"\r\n       :html-preamble \"<<html-preamble(td_list)>>\r\n                       <hr/>\r\n                       <a href=\\\"../index.html\\\">Retour menu principal</a>\"\r\n       :html-postamble nil))\r\n    (add-to-list\r\n     'org-publish-project-alist\r\n     `(\"cpp-slides\"\r\n       :base-directory ,(expand-file-name \"slides\" this-dir)\r\n       :recursive t\r\n       :exclude \"README.org\"\r\n       :html-extension \"html\"\r\n       :base-extension \"org\"\r\n       :publishing-directory ,(expand-file-name \"doc/slides\" this-dir)\r\n       :publishing-function org-html-publish-to-html\r\n       :section-numbers nil\r\n       :html-head \"<link rel=\\\"stylesheet\\\" href=\\\"../stylesheets/styles.css\\\">\r\n                   <link rel=\\\"stylesheet\\\" href=\\\"../stylesheets/org-pygments.css\\\">\"\r\n       :html-preamble \"<<html-preamble(slide_list)>>\r\n                       <hr/>\r\n                       <a href=\\\"../index.html\\\">Retour menu principal</a>\"\r\n       :html-postamble nil))\r\n    (add-to-list\r\n     'org-publish-project-alist\r\n     `(\"cpp-images\"\r\n       :base-directory ,this-dir\r\n       :base-extension \"svg\\\\|png\\\\|jpg\\\\|gif\\\\|\"\r\n       :publishing-directory ,(expand-file-name \"doc\" this-dir)\r\n       :recursive t\r\n       :exclude \"doc/*\"\r\n       :publishing-function org-publish-attachment))\r\n     )\r\n\r\n  (defun cpp-filter-latex-fragment (contents backend info)\r\n    (when (eq backend 'html)\r\n      (replace-regexp-in-string \"\\\\\\\\Cpp\" \"C++\" contents)))\r\n  (add-to-list 'org-export-filter-latex-fragment-functions 'cpp-filter-latex-fragment)\r\n  (defun cpp-filter-link (contents backend info)\r\n    (when (eq backend 'html)\r\n      (replace-regexp-in-string \".pdf\" \".html\" contents)))\r\n  (add-to-list 'org-export-filter-link-functions 'cpp-filter-link)\r\n  (defun cpp-filter-headline (contents backend info)\r\n    (when (eq backend 'html)\r\n      (replace-regexp-in-string \"</h1>\" \"</h1><hr/>\" contents)))\r\n  (add-to-list 'org-export-filter-final-output-functions 'cpp-filter-headline)\r\n  (defun cpp-filter-headline (contents backend info)\r\n    (when (eq backend 'html)\r\n      (replace-regexp-in-string \"</h1>\" \"</h1><hr/>\" contents)))\r\n  (add-to-list 'org-export-filter-final-output-functions 'cpp-filter-headline)\r\n  (defun cpp-filter-headline (contents backend info)\r\n    (when (eq backend 'html)\r\n      (replace-regexp-in-string \"</h1>\" \"</h1><hr/>\" contents)))\r\n  (add-to-list 'org-export-filter-final-output-functions 'cpp-filter-headline)\r\n  (defun cpp-filter-empty-field (backend)\r\n    (when (eq backend 'html)\r\n      (delete-matching-lines \"<empty>\")))\r\n  (add-to-list 'org-export-before-parsing-hook 'cpp-filter-empty-field)\r\n#+END_SRC\r\n*** Publish =cpp= project\r\n#+BEGIN_SRC emacs-lisp\r\n  (defun org-publish-cpp ()\r\n    (progn\r\n      (org-publish-project \"cpp-lectures\" 'force)\r\n      (org-publish-project \"cpp-td\"       'force)\r\n      (org-publish-project \"cpp-slides\"   'force)\r\n      (org-publish-project \"cpp-images\"   'force)))\r\n#+END_SRC\r\n\r\n*** Define a =by-backend= macro to deal with =tikzpicture= inclusion\r\n#+BEGIN_SRC emacs-lisp\r\n  (require 'cl)\r\n  (setq org-babel-latex-htlatex \"htlatex\")\r\n  (defmacro by-backend (&rest body)\r\n    `(case (if (boundp 'backend) (org-export-backend-name backend) nil) ,@body))\r\n#+END_SRC\r\n*** CSS stylesheets\r\n**** Main stylesheets\r\n:PROPERTIES:\r\n:TANGLE: doc/stylesheets/styles.css\r\n:END:\r\n***** Google fonts\r\n#+BEGIN_SRC css\r\n  @import url(https://fonts.googleapis.com/css?family=Lato:300italic,700italic,300,700);\r\n  @import url(https://fonts.googleapis.com/css?family=Inconsolata);\r\n  @import url(https://fonts.googleapis.com/css?family=Lobster);\r\n#+END_SRC\r\n\r\n***** Other stuff\r\n#+BEGIN_SRC css\r\n  body {\r\n      width:860px;\r\n      margin:0 auto;\r\n      padding:50px;\r\n      font:14px/1.5 Lato, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n      color:#777777;\r\n      font-weight:300;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n      color:#222222;\r\n      margin:0 0 20px;\r\n  }\r\n\r\n  p, ul, ol, table, pre, dl {\r\n      margin:0 0 20px;\r\n  }\r\n\r\n  h1, h2, h3 {\r\n      line-height:1.1;\r\n  }\r\n\r\n  h1 {\r\n      /*font-family:Lobster;*/\r\n      font-size:28px;\r\n  }\r\n\r\n  h2 {\r\n      color:#393939;\r\n  }\r\n\r\n  h3, h4, h5, h6 {\r\n      color:#494949;\r\n  }\r\n\r\n  a {\r\n      color:#3399cc;\r\n      font-weight:400;\r\n      text-decoration:none;\r\n  }\r\n\r\n  a:hover {\r\n      color:#006699;\r\n  }\r\n\r\n  a small {\r\n      font-size:11px;\r\n      color:#777777;\r\n      margin-top:-0.6em;\r\n      display:block;\r\n  }\r\n\r\n  a:hover small {\r\n      color:#777777;\r\n  }\r\n\r\n  blockquote, .remark {\r\n      border-left:1px solid #e5e5e5;\r\n      margin:0;\r\n      padding:0 0 0 20px;\r\n      font-style:italic;\r\n  }\r\n\r\n  code, pre, .prompt {\r\n      font-family:Inconsolata, Monaco, Bitstream Vera Sans Mono, Lucida Console, Terminal;\r\n      color:#777777;\r\n      font-size:12px;\r\n  }\r\n\r\n  pre {\r\n      padding:8px 15px;\r\n      background: #f8f8f8;\r\n      border-radius:5px;\r\n      border:1px solid #e5e5e5;\r\n      overflow-x: auto;\r\n  }\r\n\r\n  .prompt {\r\n      margin-bottom:15px;\r\n      padding:8px 15px;\r\n      background: #777777;\r\n      color:#e5e5e5;\r\n      border-radius:5px;\r\n      border:1px solid #e5e5e5;\r\n      overflow-x: auto;\r\n  }\r\n\r\n  .prompt p {\r\n      margin:0;\r\n  }\r\n\r\n  .prompt p:before {\r\n      content: \"$\";\r\n  }\r\n\r\n  table {\r\n      width:80%;\r\n      border-collapse:collapse;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n  }\r\n\r\n  .table-number {\r\n      font-weight: bold;\r\n  }\r\n\r\n  th, td {\r\n      text-align:left;\r\n      padding:5px 10px;\r\n      border-bottom:1px solid #e5e5e5;\r\n  }\r\n\r\n  dt {\r\n      color:#444444;\r\n      font-weight:700;\r\n  }\r\n\r\n  th {\r\n      color:#444444;\r\n  }\r\n\r\n  img {\r\n      max-width:100%;\r\n      display:block;\r\n      margin-left:auto;\r\n      margin-right:auto;\r\n  }\r\n\r\n  header {\r\n      width:270px;\r\n      float:left;\r\n      position:fixed;\r\n  }\r\n\r\n  header ul {\r\n      list-style:none;\r\n      height:40px;\r\n\r\n      padding:0;\r\n\r\n      background: #eee;\r\n      background: -moz-linear-gradient(top, #f8f8f8 0%, #dddddd 100%);\r\n      background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#f8f8f8), color-stop(100%,#dddddd));\r\n      background: -webkit-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n      background: -o-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n      background: -ms-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n      background: linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n\r\n      border-radius:5px;\r\n      border:1px solid #d2d2d2;\r\n      box-shadow:inset #fff 0 1px 0, inset rgba(0,0,0,0.03) 0 -1px 0;\r\n      width:270px;\r\n  }\r\n\r\n  header li {\r\n      width:89px;\r\n      float:left;\r\n      border-right:1px solid #d2d2d2;\r\n      height:40px;\r\n  }\r\n\r\n  header li:first-child a {\r\n      border-radius:5px 0 0 5px;\r\n  }\r\n\r\n  header li:last-child a {\r\n      border-radius:0 5px 5px 0;\r\n  }\r\n\r\n  header ul a {\r\n      line-height:1;\r\n      font-size:11px;\r\n      color:#999999;\r\n      display:block;\r\n      text-align:center;\r\n      padding-top:6px;\r\n      height:34px;\r\n  }\r\n\r\n  header ul a:hover {\r\n      color:#999999;\r\n      background: -moz-linear-gradient(top, #fff 0%, #ddd 100%);\r\n      background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#fff), color-stop(100%,#ddd));\r\n      background: -webkit-linear-gradient(top, #fff 0%,#ddd 100%);\r\n      background: -o-linear-gradient(top, #fff 0%,#ddd 100%);\r\n      background: -ms-linear-gradient(top, #fff 0%,#ddd 100%);\r\n      background: linear-gradient(top, #fff 0%,#ddd 100%);\r\n  }\r\n\r\n  header ul a:active {\r\n      -webkit-box-shadow: inset 0px 2px 2px 0px #ddd;\r\n      -moz-box-shadow: inset 0px 2px 2px 0px #ddd;\r\n      box-shadow: inset 0px 2px 2px 0px #ddd;\r\n  }\r\n\r\n  strong {\r\n      color:#222222;\r\n      font-weight:700;\r\n  }\r\n\r\n  header ul li + li {\r\n      width:88px;\r\n      border-left:1px solid #fff;\r\n  }\r\n\r\n  header ul li + li + li {\r\n      border-right:none;\r\n      width:89px;\r\n  }\r\n\r\n  header ul a strong {\r\n      font-size:14px;\r\n      display:block;\r\n      color:#222222;\r\n  }\r\n\r\n  #content {\r\n      width:600px;\r\n      float:right;\r\n      padding-bottom:50px;\r\n      /* border:1px solid #e5e5e5; */\r\n      /* border-width:1px 0;       */\r\n      /* padding:20px 0;           */\r\n      /* margin:0 0 20px;          */\r\n  }\r\n\r\n  small {\r\n      font-size:11px;\r\n  }\r\n\r\n  hr {\r\n      border:0;\r\n      background:#e5e5e5;\r\n      height:1px;\r\n      margin:0 0 20px;\r\n  }\r\n\r\n  header {\r\n      width:270px;\r\n      float:left;\r\n      position:fixed;\r\n  }\r\n\r\n  header ul {\r\n      list-style:none;\r\n      height:40px;\r\n\r\n      padding:0;\r\n\r\n      background: #eeeeee;\r\n      background: -moz-linear-gradient(top, #f8f8f8 0%, #dddddd 100%);\r\n      background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#f8f8f8), color-stop(100%,#dddddd));\r\n      background: -webkit-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n      background: -o-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n      background: -ms-linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n      background: linear-gradient(top, #f8f8f8 0%,#dddddd 100%);\r\n\r\n      border-radius:5px;\r\n      border:1px solid #d2d2d2;\r\n      box-shadow:inset #fff 0 1px 0, inset rgba(0,0,0,0.03) 0 -1px 0;\r\n      width:270px;\r\n  }\r\n\r\n  header li {\r\n      width:89px;\r\n      float:left;\r\n      border-right:1px solid #d2d2d2;\r\n      height:40px;\r\n  }\r\n\r\n  header li:first-child a {\r\n      border-radius:5px 0 0 5px;\r\n  }\r\n\r\n  header li:last-child a {\r\n      border-radius:0 5px 5px 0;\r\n  }\r\n\r\n  header ul a {\r\n      line-height:1;\r\n      font-size:11px;\r\n      color:#999999;\r\n      display:block;\r\n      text-align:center;\r\n      padding-top:6px;\r\n      height:34px;\r\n  }\r\n\r\n  header ul a:hover {\r\n      color:#999999;\r\n      background: -moz-linear-gradient(top, #fff 0%, #ddd 100%);\r\n      background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#fff), color-stop(100%,#ddd));\r\n      background: -webkit-linear-gradient(top, #fff 0%,#ddd 100%);\r\n  }\r\n\r\n  #preamble {\r\n      font-size:0.8em;\r\n      text-transform:uppercase;\r\n      float:left;\r\n      margin-left:0em;\r\n      width:20em;\r\n      text-align:right;\r\n      position:fixed;\r\n  }\r\n\r\n  #preamble hr {\r\n      margin:0 0 0px;\r\n  }\r\n\r\n  #preamble a {\r\n      display:block;\r\n      padding:0.2em 1em;\r\n      color:#3399cc;\r\n  }\r\n\r\n  #preamble a:hover {\r\n      background-color:#39c;\r\n      text-decoration:none;\r\n      color:#f9f9f9;\r\n      -webkit-transition:color .2s linear;\r\n  }\r\n\r\n  #preamble aa {\r\n      display:block;\r\n      padding:0.2em 1em;\r\n      color:#999999;\r\n  }\r\n\r\n  #preamble aa:hover {\r\n      background-color:none;\r\n      text-decoration:none;\r\n  }\r\n\r\n  .center {\r\n      text-align : center;\r\n  }\r\n\r\n  .footpara {\r\n      display: inline;\r\n  }\r\n\r\n  @media print, screen and (max-width: 960px) {\r\n\r\n      body {\r\n          width:auto;\r\n          margin:0;\r\n      }\r\n\r\n      header, content, footer {\r\n          float:none;\r\n          position:static;\r\n          width:auto;\r\n      }\r\n\r\n      header {\r\n          padding-right:320px;\r\n      }\r\n\r\n      header a small {\r\n          display:inline;\r\n      }\r\n\r\n      header ul {\r\n          position:absolute;\r\n          right:50px;\r\n          top:52px;\r\n      }\r\n  }\r\n\r\n  @media print, screen and (max-width: 720px) {\r\n      body {\r\n          word-wrap:break-word;\r\n      }\r\n\r\n      header {\r\n          padding:0;\r\n      }\r\n\r\n      header ul, header p.view {\r\n          position:static;\r\n      }\r\n\r\n      pre, code {\r\n          word-wrap:normal;\r\n      }\r\n  }\r\n\r\n  @media print, screen and (max-width: 480px) {\r\n      body {\r\n          padding:15px;\r\n      }\r\n\r\n      header ul {\r\n          display:none;\r\n      }\r\n  }\r\n\r\n  @media print {\r\n      body {\r\n          padding:0.4in;\r\n          font-size:12pt;\r\n          color:#444;\r\n      }\r\n  }\r\n#+END_SRC\r\n\r\n**** Org source code styles\r\n:PROPERTIES:\r\n:TANGLE:   doc/stylesheets/org-pygments.css\r\n:END:\r\n\r\n#+BEGIN_SRC css\r\n  .org-preprocessor {\r\n      color: #84B818;\r\n  }\r\n\r\n  .org-string,\r\n  .org-type {\r\n      color: #DEB542;\r\n  }\r\n\r\n  .org-builtin,\r\n  .org-variable-name,\r\n  .org-constant,\r\n  .org-function-name {\r\n      color: #69B7F0;\r\n  }\r\n\r\n  .org-comment,\r\n  .org-comment-delimiter,\r\n  .org-doc {\r\n      color: #93a1a1;\r\n  }\r\n\r\n  .org-keyword {\r\n      color: #D33682;\r\n  }\r\n\r\n  pre {\r\n      color: #777777;\r\n  }\r\n#+END_SRC\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}